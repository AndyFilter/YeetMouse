* Description
  *YeetMouse* is a kernel module that allows for fast and customizable mouse acceleration.
  I created *YeetMouse* to build upon the great work of /Klaus Zipfel's/ *[[https://github.com/systemofapwne/leetmouse][LeetMouse]]* and add features such as =Jump= (at first it was mostly it, the Jump acceleration mode).
  But it quickly grew into something bigger as I decided to add a GUI to it for better control.

  #+CAPTION: Basic functions presentation
   [[media/YeetMouseGithub.gif]]

* Installation & Uninstallation
** Preparation & Configuration
   + Clone this repository, find the settings you're most comfortable with, using GUI, change the defines in the config.h (More on this in the [[https://github.com/AndyFilter/YeetMouse?tab=readme-ov-file#settings-are-not-preserved-between-reboots][FAQ]] section about persistent settings).
   + Make sure, you have the required toolchains (e.g. =base-devel= on Arch or =build-essentials= on Debian) installed as well as the =linux-headers= for your installed kernel.

** Running the GUI
*** Prerequisites:
   + OpenGL (you most likely already have it)
   + GLFW3, which can be installed via these commands:
   #+begin_src sh
    sudo apt-get install libglfw3
    sudo apt-get install libglfw3-dev
   #+end_src

*** Building
   To build, go to the gui directory =cd gui/= and run =make=

*** Starting
   Keep in mind that the program needs to be *run with sudo privileges*.
   To run, simply use =sudo -E ./YeetMouseGui=

** Arch/Manjaro
   For Arch and Manjaro, a =PKGBUILD= has been written for seamless integration into pacman.

   *Installation*
   #+begin_src sh
   # Create the PKGBUILD, copy associated files and run makepkg
   ./scripts/build_arch.sh
   # Run pacman on the created package
   sudo pacman -U pkg/build/yeetmouse*.zst
   #+end_src
   All your mice should now be bound to this driver. They will also automatically bind to it after a reboot.
   
   *Uninstallation*
   #+begin_src sh
   sudo pacman -R yeetmouse-driver-dkms
   #+end_src
   All your mice should now be bound to the generic usbhid driver again.

** Ubuntu (tested on 24.04 and 20.04)
  Simply use the installation and uninstallation scripts, =sudo ./install.sh= and =sudo ./uninstall.sh= respectively.
  If something doesn't work as expected, try installing manually as stated in section *Other distros*, and check all the error logs.

** NixOS
  Please refer to [[nix/][NixOS instructions]].
   
** Other distros
   Other distributions' package-managers are not yet supported and thus need a manual installation.
   
   *Installation*

   Determine the current version of this module by examining the variable =DKMS_VER= in the =Makefile=. It can be e.g. 0.9.2
   Run the following commands to build and install the kernel module
   #+begin_src sh
   # Install the driver and activate the dkms module
   sudo make setup_dkms
   sudo dkms install -m yeetmouse-driver -v 0.9.2 # Enter the version you determined from the Makefile earlier in here
   sudo modprobe yeetmouse
   #+end_src
   (Or you can use the built-in install script like so: =sudo ./install.sh=).

   All your mice should now be bound to this driver. They will also automatically bind to it after a reboot.
   If this still does not work, there is a major problem
   
   *Uninstallation*
   
   You again need to know the =version= as described above for the installation
   #+begin_src sh
   # Uninstall the driver
   sudo dkms remove yeetmouse-driver/0.9.2 --all
   sudo make remove_dkms
   sudo rmmod yeetmouse
   #+end_src
   (Or you can use the built-in uninstall script like so: =sudo ./uninstall.sh=, this script determines installed driver version automatically).

   Unplug and replug your mouse or reboot to have your mice bound back to the generic usbhid.
* Manual compile, insmod, bind
   If you want to compile this module only for testing purposes or development, you do not need to install the whole package to your system

   Compile the module, remove previously loaded modules and insert it.
   #+begin_src sh
   make clean && make
   sudo rmmod yeetmouse
   sudo insmod ./driver/yeetmouse.ko
   #+end_src

* FAQ
*** How to set custom parameter value?
- Ctrl + Left Click on the parameter box to start inputting the values manually.


*** Settings are not preserved between reboots
- This is (unfortunately) how things are done on most distros, for security reasons I presume.
  But there is a way so save the settings. All You need to do is find the values You like and Export them to a config.h format like so:
  #+CAPTION: Exporting config to a .h format
  [[https://private-user-images.githubusercontent.com/69699046/397979220-ad0fc1a9-5616-4b41-b453-7398dbb9993c.png?jwt=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJnaXRodWIuY29tIiwiYXVkIjoicmF3LmdpdGh1YnVzZXJjb250ZW50LmNvbSIsImtleSI6ImtleTUiLCJleHAiOjE3Mzk4MDA4ODksIm5iZiI6MTczOTgwMDU4OSwicGF0aCI6Ii82OTY5OTA0Ni8zOTc5NzkyMjAtYWQwZmMxYTktNTYxNi00YjQxLWI0NTMtNzM5OGRiYjk5OTNjLnBuZz9YLUFtei1BbGdvcml0aG09QVdTNC1ITUFDLVNIQTI1NiZYLUFtei1DcmVkZW50aWFsPUFLSUFWQ09EWUxTQTUzUFFLNFpBJTJGMjAyNTAyMTclMkZ1cy1lYXN0LTElMkZzMyUyRmF3czRfcmVxdWVzdCZYLUFtei1EYXRlPTIwMjUwMjE3VDEzNTYyOVomWC1BbXotRXhwaXJlcz0zMDAmWC1BbXotU2lnbmF0dXJlPTg2YTg0YjI1OTAxMDAwMDUxOWQ0YzNhMzExZmM5NWQ5MzQ3NWE4YjQ4YzcxMTNlYWUyNTE1ZTYzMjMyMGU1M2MmWC1BbXotU2lnbmVkSGVhZGVycz1ob3N0In0.bhGe7Igfl56zRPajmUchH2ppTpsGfuD1DyXWjYttQzo]]

  Then simply replace the =config.h= file located in =/driver= (or create a one), and reinstall the driver.

*** Mouse feels off (too fast / slow)
- On some distros (for example Ubuntu 20.04) system adds an additional sensitivity on top of the driver. To combat this You'll need to configure the settings correctly.
  This is system dependant, but for Ubuntu 20.04 users, the exact sensitivity value is -0.666, to apply that, simply use =gsettings set org.gnome.desktop.peripherals.mouse speed -0.666=


*** How do I convert my RawAccel settings?
- For the simple modes like /Linear, Classic, Power/ just use the RawAccel's values (same for /Jump/).
- For /Motivity/ and /Natural/, You're out of luck for now. Motivity is implemented, but it does not support =Gain=. Natural on the other hand is not implemented, and not planned as of for now.
- LuT (Look up Table) is just what you put in it, there is no difference between YeetMouse and RawAccel.
- Keep in mind that the names are not 1:1 for every parameter.
- To check how Your new curve compares to RawAccel's, just take a screenshot of RawAccel with your curve and compare the two.


* Fixed-Point Performance Analysis
  #+CAPTION: Functions Performance Comparison
   [[media/InstructionPerformance.png]]

#+BEGIN_HTML
<table><thead>
  <tr>
    <th>Instruction</th>
    <th>Fixed-Point / FPU</th>
    <th>Mop/s</th>
    <th>ns/op</th>
    <th>Clock cycles/op</th>
  </tr></thead>
<tbody>
  <tr>
    <td rowspan="3">Multiplication</td>
    <td>Fixed-Point 64</td>
    <td>542.905367</td>
    <td>1.911</td>
    <td>7.029038</td>
  </tr>
  <tr>
    <td>Fixed-Point 64 (128bit)</td>
    <td>540.682695</td>
    <td>1.913</td>
    <td>7.012462</td>
  </tr>
  <tr>
    <td>FPU (double)</td>
    <td>788.524105</td>
    <td>1.29</td>
    <td>4.722532</td>
  </tr>
  <tr>
    <td rowspan="3">Division</td>
    <td>Fixed-Point 64 (Precise)</td>
    <td>91.446419</td>
    <td>11.299</td>
    <td>41.756461</td>
  </tr>
  <tr>
    <td>Fixed-Point 64 (128bit)</td>
    <td>203.819151</td>
    <td>5.097</td>
    <td>18.797924</td>
  </tr>
  <tr>
    <td>FPU (double)</td>
    <td>188.035704</td>
    <td>5.392</td>
    <td>19.879064</td>
  </tr>
  <tr>
    <td rowspan="3">Exponent</td>
    <td>Fixed-Point 64</td>
    <td>66.550845</td>
    <td>15.561</td>
    <td>57.525454</td>
  </tr>
  <tr>
    <td>Fixed-Point 64 (Fast)</td>
    <td>92.775366</td>
    <td>11.285</td>
    <td>41.702182</td>
  </tr>
  <tr>
    <td>FPU (double)</td>
    <td>116.396443</td>
    <td>8.741</td>
    <td>32.276506</td>
  </tr>
  <tr>
    <td rowspan="3">Sqrt</td>
    <td>Fixed-Point 64 (Precise)</td>
    <td>18.059895</td>
    <td>57.307</td>
    <td>211.97892</td>
  </tr>
  <tr>
    <td>Fixed-Point 64</td>
    <td>64.558792</td>
    <td>15.675</td>
    <td>57.956097</td>
  </tr>
  <tr>
    <td>FPU (double)</td>
    <td>133.474534</td>
    <td>7.9</td>
    <td>29.179384</td>
  </tr>
  <tr>
    <td rowspan="3">Pow</td>
    <td>Fixed-Point 64</td>
    <td>31.81294</td>
    <td>32.221</td>
    <td>119.111214</td>
  </tr>
  <tr>
    <td>Fixed-Point 64 (Fast)</td>
    <td>40.524527</td>
    <td>26.043</td>
    <td>96.310556</td>
  </tr>
  <tr>
    <td>FPU (double)</td>
    <td>77.804544</td>
    <td>17.113</td>
    <td>63.251944</td>
  </tr>
  <tr>
    <td rowspan="3">Log</td>
    <td>Fixed-Point 64</td>
    <td>51.117073</td>
    <td>21.033</td>
    <td>77.768302</td>
  </tr>
  <tr>
    <td>Fixed-Point 64 (Fast)</td>
    <td>61.341951</td>
    <td>16.638</td>
    <td>61.497848</td>
  </tr>
  <tr>
    <td>FPU (double)</td>
    <td>53.326065</td>
    <td>19.876</td>
    <td>73.491065</td>
  </tr>
</tbody></table>
#+END_HTML

**** /More in-depth performance and precision analysis can be found [[Performance.md][here]]/.